# -*- coding: utf-8 -*-
"""MonteCarloSimulation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1szBHh4ndLFapDDejThTh_pzu7istlAwh
"""

import scipy.stats as sct
import random
from matplotlib import pyplot as plt
import numpy as np
import seaborn as sns

"""This model will be using an assumption of a normal distribution and Gordon Growth

This is my first attempt at building a Monte Carlo simulation, and because of that, all these numbers are hypothetical, I am going to create an applicable one soon
"""

d0 = 100
data = []
for x in range(10000):
  i = random.uniform(0.05, 0.08)
  j = random. uniform(0.09, 0.10)
  d1 = d0 * (1 + i)
  v0 = d1/(j - i)
  data.append(v0)

sns.distplot(data)
plt. ylabel( 'Frequency')
plt.xlabel( 'Market Value')
plt.show()

print("Standard Deviation is",  np.std(data))
print("Maximum value is", np.max(data))
print("Minumum value is", np.min(data))

## D0 = Dividend
##
##
##
##

D0 = 100
g_mean = 0.05
g_sd = 0.01

for x in range(10000):
  g = sct.norm.ppf(random.uniform(0,1), loc = g_mean, scale = g_sd)
  r = 0.10
  d1 = d0 * (1 + g)
  v0 = d1/(r - g)
  data.append(v0)

sns.distplot(data)
plt. ylabel( 'Frequency')
plt.xlabel( 'Market Value')
plt.show()

np.mean(data)

np.median(data)

np.std(data)

np.max(data)

np.min(data)
